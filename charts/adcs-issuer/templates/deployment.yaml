---
apiVersion: v1
kind: Deployment
metadata:
  name: {{ printf "%s-controller-manager" (include "adcs-issuer.fullname" .) | squote }}
  labels:
{{- include "adcs-issuer.labels" . | nindent 4}}
    app.kubernetes.io/component: controller-manager
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
{{- include "adcs-issuer.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
{{- include "adcs-issuer.labels" . | nindent 8 }}
        app.kubernetes.io/component: controller-manager
    spec:
      containers:
        - name: controller-manager
{{- $image := printf "%s:%s" .Values.controllerManager.manager.image.repository (default .Chart.AppVersion .Values.controllerManager.manager.image.version) }}
          image: {{ squote $image }}
          imagePullPolicy: {{ squote .Values.controllerManager.manager.image.pullPolicy }}
{{- with .Values.controllerManager.arguments }}
          args:
{{-   range $k, $v := . }}
            - --{{ $k }}{{ if $v }}={{ $v }}{{ end }}
{{-   end }}
{{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
{{- with $.Values.controllerManager.environment }}
{{-   range $k, $v := . }}
            - name: {{ squote $k }}
              value: {{ squote $v }}
{{-   end }}
{{- end }}
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
{{- with $.Values.controllerManager.manager.resources }}
          resources:
{{-   toYaml . | nindent 12 }}
{{- end }}
{{- with $.Values.controllerManager.manager.readinessProbe }}
          readinessProbe:
{{-   toYaml . | nindent 12 }}
{{- end }}
{{- with $.Values.controllerManager.manager.livenessProbe }}
          livenessProbe:
{{-   toYaml . | nindent 12 }}
{{- end }}
{{- with $.Values.controllerManager.manager.securityContext }}
          securityContext:
{{-   toYaml . | nindent 12 }}
{{- end }}
          volumeMounts:
{{- if .Values.controllerManager.enabledWebHooks }}
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
{{- end }}
{{- if .Values.controllerManager.enabledCaCerts }}
            - mountPath: /etc/ssl/certs/ca-certificates.crt
              name: ca-certificates
              subPath: ca-certificates.crt
              readOnly: true
{{- end }}
      volumes:
{{- if .Values.controllerManager.enabledWebHooks }}
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
{{- end }}
{{- if .Values.controllerManager.enabledCaCerts }}
        - name: ca-certificates
          secret:
            defaultMode: 420
            secretName: {{ squote .Values.controllerManager.caCertsSecretName }}
{{- end }}
      terminationGracePeriodSeconds: {{ .Values.controllerManager.terminationGracePeriodSeconds }}
{{- with $.Values.controllerManager.securityContext }}
      securityContext:
{{-     toYaml . | nindent 8 }}
{{- end }}
{{- with $.Values.controllerManager.tolerations }}
      tolerations:
{{-     toYaml . | nindent 8 }}
{{- end }}
{{- with $.Values.controllerManager.topologySpreadConstraints }}
      topologySpreadConstraints:
{{-   toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- if or $.Values.controllerManager.nodeAffinity $.Values.controllerManager.podAffinity $.Values.controllerManager.podAntiAffinity }}
      affinity:
{{-   with $.Values.controllerManager.nodeAffinity }}
        nodeAffinity:
{{-     toYaml . | nindent 10 }}
{{-   end }}
{{-   with $.Values.controllerManager.podAffinity }}
        podAffinity:
{{-     toYaml . | nindent 10 }}
{{-   end }}
{{-   with $.Values.controllerManager.podAntiAffinity }}
        podAntiAffinity:
{{-     toYaml . | nindent 10 }}
{{-   end }}
{{- end }}
